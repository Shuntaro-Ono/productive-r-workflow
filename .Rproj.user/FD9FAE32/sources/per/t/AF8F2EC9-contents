---
title: "Penguin"
format: 
  html:
    code-fold: true
    code-summary: "Show the code"
    toc: true
    toc-location: left
    number-sections: true
execute:
  echo: true
  warning: false
  message: false
editor: visual
fig-cap-location: margin
---

```{r setup, include=FALSE}
knitr::opts_knit$set(root.dir = "C:/Users/54239/OneDrive - MITSUI & CO., LTD/R/productive-r-workflow")
```

::: {.callout-note}
A few consideration about this doc
This Quarto document serves as a practical illustration of the concepts covered in the productive workflow online course. It’s designed primarily for educational purposes, so the focus is on demonstrating Quarto techniques rather than on the rigor of its scientific content.
:::

## Introduction

This document offers a straightforward analysis of the well-known penguin dataset. It is designed to complement the [Productive R Workflow](https://www.productive-r-workflow.com/) online course.

You can read more about the penguin dataset [here](https://allisonhorst.github.io/palmerpenguins/).

Let’s load libraries before we start!

```{r, warning = FALSE, message = FALSE}

# load the tidyverse
library(tidyverse)
library(readxl)
library(patchwork)
library(hrbrthemes)

```

## Loading data

We will use [palmerpenguins](https://allisonhorst.github.io/palmerpenguins/) data and what we can learn from it.

The dataset has already been loaded and cleaned in the previous step of this pipeline.

Let’s load the clean version, together with a few functions available in functions.R.

```{r, warning = FALSE, message = FALSE}

# load the tidyverse
library(tidyverse)
library(readxl)

# Source functions
source(file="R/functions.R")

# Read data using readxl
data <- read_excel("input/data.xlsx", na = "NA")

# Read the clean dataset
data <- readRDS(file = "input/clean_data.rds")
```

![Bill measurement explanation](asset/culmen_depth.png){width=300}

## Bill Length and Bill Depth

Now, let's make some descriptive analysis, including <b>summary statistics</b> and <b>graphs</b>.

What's striking is the <b>slightly negative relationship</b> between `bill length` and `bill depth`:

```{r, fig.align = "center", fig.width=5, fig.height=5, warning=FALSE, fig.cap="Relationship between bill <b>length</b> and bill <b>depth</b>. <b>All</b> data points included."}

data %>%
  ggplot(
    aes(x = bill_length_mm, y = bill_depth_mm)
  ) +
    geom_point(color="#69b3a2") +
    labs(
      x = "Bill Length (mm)",
      y = "Bill Depth (mm)",
      title = paste("Surprising relationship?")
    ) + 
  theme_ipsum()

```

It is also interesting to note that `bill length` a and `bill depth` are quite different from one specie to another. The average of a variable can be computed as follow:

$$Avg=\frac{1}{n}$$

`bill length` and `bill depth` averages are summarized in the 2 tables below.

```{r}
#| layout-ncol: 2

data %>%
 group_by(species) %>% 
  summarise(average_bill_length = mean(bill_length_mm, na.rm = TRUE))

data %>%
 group_by(species) %>% 
  summarise(average_bill_depth = mean(bill_depth_mm, na.rm = TRUE))

```

Now, let's check the relationship between bill depth and bill length for the specie `Adelie` on the island `Torgersen`:

```{r, warning=FALSE, fig.height=3, fig.width=9, fig.cap="There is actually a positive correlation when split by species."}

# Use the function in functions.R
p1 <- create_scatterplot(data, "Adelie", "#6689c6")
p2 <- create_scatterplot(data, "Chinstrap", "#e85252")
p3 <- create_scatterplot(data, "Gentoo", "#9a6fb0")

p1 + p2 + p3
```


## Tips

### Equation

For inline equations, enclose your LaTeX code within single dollar signs ($).
For example, $E=mc^2$ renders the famous equation inline with the text.

For display equations, which are centered and on their own line, use double dollar signs around your LaTeX code. For example, $$E=mc^2$$ will render the equation centered on its own line.


### Dynamic Variable Integration

Some text in your quarto doc.

```{r}
avg_height <- (4 + 4 + 7) / 3
```

The avg is `r avg_height`

